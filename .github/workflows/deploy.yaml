name: Deploy to production

on:
  push:
    branches: [ "main" ]

permissions:
    id-token: write
    contents: read

jobs:

  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:

    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
  
    - name: Install kubectl matching server version
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.31.1'
      id: install
      
    - name: Sts GetCallerIdentity
      run: |
        aws sts get-caller-identity
      
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Load secrets and save to app.env
      run: aws secretsmanager get-secret-value --secret-id=sparrow-test --query=SecretString --output=text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: core/sparrow
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
        docker push -a $REGISTRY/$REPOSITORY

    # - name: Update kubectl configuration
    #   run: aws eks update-kubeconfig --name sparrow --region ap-south-1

    # - name: Deploy to EKS
    #   run: |
    #     kubectl apply -f eks/aws-auth.yaml
    #     kubectl apply -f eks/deployment.yaml
    #     kubectl apply -f eks/service.yaml
    #     kubectl apply -f eks/issuer.yaml
    #     kubectl apply -f eks/ingress.yaml